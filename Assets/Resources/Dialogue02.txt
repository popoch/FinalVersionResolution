자, 마침 컴퓨터가 너에게 인사를 하네.
다음 세 개의 답변 중의 하나를 골라서 대답해봐.

...!
어? 어? 내가 뭐 잘못했어?
하하, 아까 말했던 것처럼, 
컴퓨터는 사람이 아니라서 사람이랑 대화하는 것처럼 말하면 이해하지 못하기 때문이야.
내가 몇 가지 예시를 들어서 설명해 줄게.

먼저, 컴퓨터랑 대화하기 위해서는, 컴퓨터가 이해할 수 있는 언어를 이용해야 해.
그리고 그 언어를 이용해 프로그래밍이라는 작업을 해야 해. 
그런데 그냥 막 쓴다고 컴퓨터가 이해하는 것은 아니고, 
컴퓨터가 이해할 수 있는 형식으로 글을 써야 해. 
방금 네가 본 화면은 ‘SyntaxError’를 나타내고 있는데, 
이 말은 ‘문법 오류’란 뜻이야.
말 그대로 문법이 지금 틀렸다는 뜻이지.
‘문법’이 뭔지는 알지? 
영어 배울 때 나오는 ‘문법’이랑 비슷해. 
정해진 형식에 따라서 글을 써야 하지.
이런 ‘문법’은 수학에도 있어.
숫자와 기호들을 순서에 맞게 위치시켜야, 원하는 결과를 얻을 수 있는 것처럼 말이야.
화학에서도, ‘물’의 분자식은 H2O라고 정해져 있는 것처럼, 
프로그래밍도 정해진 문법에 따라서 작성해야 해.
그럼 프로그래밍에서 정해진 문법은 뭘까.
그렇게 어렵지 않아.
자, 아까 컴퓨터의 인사에 답할 때, 너는 Hello, Hi, Hey 중 하나를 골라서 그대로 입력했지? 
화면에 글을 출력할 때는 다음과 같은 문법을 지켜가며 작성해야 해.
한번 따라 쳐봐.

잘했어. 반대로 네가 쓰는 내용을 컴퓨터가 입력받을 수도 있어.
네가 핸드폰에 다른 사람의 번호를 저장할 때, 
사람 이름과 번호를 같이 저장하는 것과 같아.
Variable = input( )을 사용하면, 
컴퓨터는 Variable에 네가 작성하는 내용을 input()을 통해 입력받아 저장하게 돼.
즉, Variable이 일종의 ‘저장 공간’이 되는 셈이지.
나중에 이 Variable을 불러오면, 네가 input()을 이용해 Variable에 저장해 둔 내용이 화면에 출력이 되는 거야.
즉, input()은 컴퓨터에 어떠한 정보를 입력할 수 있는 방법이지
name이라는 variable에 너의 이름을 저장할 수 있는 코드를 작성해봐. 
나중에 name을 다시 부르면 저장되어 있는 너의 이름이 나타날 거야

어렵지 않지? 참고로, 파이선에서는 숫자와 기호를 이용해 계산기처럼 계산도 할 수 있어.
1 + 2라고 입력하면 3이 출력되고,
2 * 3은 6이 출력되고, 2 / 4는 1/2 즉, 0.5라고 계산돼서 화면에 출력돼.
한번 따라 써봐.

이해 잘 하는데? 그럼 어디 얼마나 이해했는지 볼까?
주어진 문자들을 순서에 맞게 옮겨서 문장을 완성시켜주면 돼.
컴퓨터의 인사에 print를 사용해서 대답해줘.

잘 했어! 그럼 이제 디스켓 조각이 어디 있는지 한번 물어봐.
질문은 이미 정해져 있어. 그러니 input을 사용해서 질문이 Question에 저장이 되도록 만들어 줘.
그러면 그다음에 입력되어 있는 Question에 의해 네 질문이 불려서 컴퓨터에게 물어보게 될 거야.
input을 사용해서 질문을 어딘가에 저장하고, 질문을 다시 부르는 방법은 다음과 같아.

드디어 하나 찾았네.
그런데 컴퓨터가 뭘 물어보네
‘이제 3개의 조각 중 하나를 찾았으니, 몇 개의 조각이 남은 건지 계산해보게 계산 식을 입력해 달라’라니..
뭐, 어려운 일 아니니까 해 주자.
아까처럼 단어들을 순서에 맞게 입력해서 식을 완성시켜봐. 
계산식은 지문을 읽어보면 어렵지 않게 세워지지?

잘했어, 금방 배우네. 
그럼 이제 다음 디스켓을 찾아보자.
아 이런, 
다음 디스켓 찾기는 조금 까다롭겠다.