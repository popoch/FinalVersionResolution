자 이제 마지막 조각은 어디에 있을까?
이런, 여길 지나야 하는데 길이 막혔네,
여길 직진해서 가야 하니까..
저 엘리베이터를 이용해서 절벽 위로 올라가자.
한 5층쯤 돼 보이지? 엘리베이터가 이동할 높이를 선택해줘.

역시. 딱 알맞게 도착해주네. 자 내리자.
아, 이 엘리베이터가 어떻게 올라온 거냐고?
방금 엘리베이터는 for라는 ‘반복문’을 이용해서 올라왔어. 
‘반복문’은 어려운 개념이 아니야.
말 그대로 어떤 일을 반복적으로 행하도록 명령하는 거야.
무슨 말인지 이해돼? 
마치 네가 일요일부터 토요일까지 한 주를 보내고 나면, 
다시 일요일부터 일주일이 다시 시작되는 것
또는 아침에 눈 뜨면 씻고, 밥 먹고, 일하고 
저녁에 와서 정리하고 잔 다음, 
다음날 다시 같은 일과를 반복하는 것.
이게 바로 일종의 반복문이 행해지고 있는 거야.
단순하지? 이제는 어떻게 쓰는지 알려줄게.
반복문은 for 문이라고 불리는 형식을 사용해
for 다음에 하나의 variable을 넣은 다음,
range의 괄호 안에 몇 번을 반복할 것인지 숫자를 정해서 넣어주면 돼.
중요한 건 프로그래밍에서 수를 셀 때는 기본적으로 0부터 시작해.
따라서 특별히 다른 값을 지정하지 않는 한 variable의 값은 0부터 시작해서 
네가 정한 값에 도달하기 전까지 1씩 증가할 거야.
그리고 variable의 값이 1씩 증가할 때마다 
for 문 다음에 적은 명령들이 한 번씩 실행되는 거지.
결국은 네가 정한 반복 횟수만큼 명령들이 반복되는 거야.
아까 네가 층수를 입력했던 엘리베이터의 for 문 코드를 한번 써보자

보다시피 for 다음에 i라는 variable이 있고,
그다음에 네가 입력한 숫자가 있지? 
이걸 이용해서 층수를 5번 높이고 있어.
variable은 엘리베이터에 쓰인 i처럼 단순히 범위를 정하기 위해 쓰여지는 것일 수 있지만,
때로는 범위와 더불어 for 문 안에서도 이용하도록 만들 수도 있어
앞서 variable은 1씩 증가한다고 했지?
그걸 이용해서 여기서는 i가 4가 될 때까지 아무것도 안 하다가,
4가 되면 그제서야 엘리베이터가 한 층 올라가도록 되어있어.
이처럼 for 문 안에 다른 조건문도 쓸 수 있다는 것을 알아둬.
그럼 이제 마지막 디스켓 조각을 찾아볼까?
후! 높네 높아.
여기 높게 솟아 있는 창고에서 디스켓이 있는 층의 창고에 일단 올라가야 해.
정보에 따르면 디스켓 조각이 25층에 있다고 하니,
for 문을 이용해서 엘리베이터를 25층까지 가도록 만들자.
floors와 for 문에 쓰이는 variable은 시작 값이 0이야. 25층까지 가야 하니까 반복을 25번 하면 되겠지?

잘했어! 이제 디스켓을 찾아보자.
여기 많은 서랍 중에 1440번 서랍에 디스켓이 들어 있다고 해,
그런데 서랍에 번호가 안 매겨져 있는 데다가 수가 너무 많으니까, 
컴퓨터한테 1440번 서랍이 어디에 있는지 표시해달라 하자. 
컴퓨터가 서랍을 처음부터 하나씩 세어 가다가 1440번째 서랍이 나오면 ‘여기’라고 표시하도록 만들면 쉽게 찾을 수 있을 거야.

드디어 마지막 조각까지 다 찾았구나! 축하해! 
이제 여기서 나갈 수 있게 됐어!
우선은 여기서 내려가자. 
아까 만든 엘리베이터의 코드를 수정해서 1층까지 내려가도록 만들자.
아까와는 다르게 floors는 25부터 시작되지만, for 문의 variable은 이전처럼 0부터 시작될 거야. 
floors가 주기적으로 1씩 감소된다는 걸 유의해.

고생했어! 이제 꿈에서 나가야지?  
곧 있으면 아침이라고!